services:
  app:
    container_name: epic_doc_app
    build: .
    ports:
      - "${APP_PORT}:${APP_PORT}"
      - "${WS_PORT}:${WS_PORT}"
      - "${YJS_PORT}:${YJS_PORT}"
    volumes:
      - .:/usr/src/app
      - ./node_modules:/usr/src/app/node_modules
    command: sh -c "npm run y-websocket & npm run start:dev"
    environment:
      - NODE_ENV=${NODE_ENV}
      - APP_PORT=${APP_PORT}
      - WS_PORT=${WS_PORT}
      - YJS_PORT=${YJS_PORT}
      - DB_HOST=postgres
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_SYNCHRONIZE=${DB_SYNCHRONIZE}
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: epic_doc_postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data: